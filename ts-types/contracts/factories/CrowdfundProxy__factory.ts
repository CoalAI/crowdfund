/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { CrowdfundProxy } from "../CrowdfundProxy";

export class CrowdfundProxy__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<CrowdfundProxy> {
    return super.deploy(overrides || {}) as Promise<CrowdfundProxy>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CrowdfundProxy {
    return super.attach(address) as CrowdfundProxy;
  }
  connect(signer: Signer): CrowdfundProxy__factory {
    return super.connect(signer) as CrowdfundProxy__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrowdfundProxy {
    return new Contract(address, _abi, signerOrProvider) as CrowdfundProxy;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fundingCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mediaAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "operator",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "operatorPercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "status",
    outputs: [
      {
        internalType: "enum CrowdfundStorage.Status",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50336001600160a01b03166309d380336040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156200004e57600080fd5b505af115801562000063573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000089919062000441565b600160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550336001600160a01b0316634f0e0ef36040518163ffffffff1660e01b8152600401602060405180830381600087803b158015620000eb57600080fd5b505af115801562000100573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000126919062000441565b600260006101000a8154816001600160a01b0302191690836001600160a01b03160217905550336001600160a01b031663d7dfa0dd6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156200018857600080fd5b505af11580156200019d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001c3919062000441565b600d60006101000a8154816001600160a01b0302191690836001600160a01b03160217905550336001600160a01b031663890357306040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200022557600080fd5b505af11580156200023a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000264919081019062000467565b600080600360006004600060066000600560008a919050908051906020019062000290929190620002e8565b50508851620002a5919060208b0190620002e8565b5050969096559590955580546001600160a01b039687166101009690960a95860296909502199094169490941790925550506007805460ff191690555062000564565b828054620002f690620004f8565b90600052602060002090601f0160209004810192826200031a576000855562000365565b82601f106200033557805160ff191683800117855562000365565b8280016001018555821562000365579182015b828111156200036557825182559160200191906001019062000348565b506200037392915062000377565b5090565b5b8082111562000373576000815560010162000378565b600082601f8301126200039f578081fd5b81516001600160401b0380821115620003bc57620003bc62000535565b604051601f8301601f19908116603f01168101908282118183101715620003e757620003e762000535565b8160405283815260209250868385880101111562000403578485fd5b8491505b8382101562000426578582018301518183018401529082019062000407565b838211156200043757848385830101525b9695505050505050565b60006020828403121562000453578081fd5b815162000460816200054b565b9392505050565b600080600080600060a086880312156200047f578081fd5b85516200048c816200054b565b60208701516040880151606089015192975090955093506001600160401b0380821115620004b8578283fd5b620004c689838a016200038e565b93506080880151915080821115620004dc578283fd5b50620004eb888289016200038e565b9150509295509295909350565b600181811c908216806200050d57607f821691505b602082108114156200052f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146200056157600080fd5b50565b61058d80620005746000396000f3fe6080604052600436106100d65760003560e01c806370a082311161007f57806395d89b411161005957806395d89b41146102aa578063ad5c4648146102bf578063dd62ed3e146102ec578063e3b2594f14610324576100dd565b806370a082311461023a5780637b4044a0146102675780637ecebe001461027d576100dd565b8063200d2ed2116100b0578063200d2ed2146101bf578063313ce567146101e6578063570ca7351461020d576100dd565b806306fdde031461011e57806309d380331461014957806318160ddd1461019b576100dd565b366100dd57005b600d5460405173ffffffffffffffffffffffffffffffffffffffff9091169036600082376000803683855af43d806000843e81801561011a578184f35b8184fd5b34801561012a57600080fd5b5061013361033a565b6040516101409190610492565b60405180910390f35b34801561015557600080fd5b506001546101769073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610140565b3480156101a757600080fd5b506101b160095481565b604051908152602001610140565b3480156101cb57600080fd5b506007546101d99060ff1681565b6040516101409190610451565b3480156101f257600080fd5b506101fb601281565b60405160ff9091168152602001610140565b34801561021957600080fd5b506000546101769073ffffffffffffffffffffffffffffffffffffffff1681565b34801561024657600080fd5b506101b16102553660046103fe565b600a6020526000908152604090205481565b34801561027357600080fd5b506101b160045481565b34801561028957600080fd5b506101b16102983660046103fe565b600c6020526000908152604090205481565b3480156102b657600080fd5b506101336103c8565b3480156102cb57600080fd5b506002546101769073ffffffffffffffffffffffffffffffffffffffff1681565b3480156102f857600080fd5b506101b161030736600461041f565b600b60209081526000928352604080842090915290825290205481565b34801561033057600080fd5b506101b160035481565b6006805461034790610503565b80601f016020809104026020016040519081016040528092919081815260200182805461037390610503565b80156103c05780601f10610395576101008083540402835291602001916103c0565b820191906000526020600020905b8154815290600101906020018083116103a357829003601f168201915b505050505081565b6005805461034790610503565b803573ffffffffffffffffffffffffffffffffffffffff811681146103f957600080fd5b919050565b60006020828403121561040f578081fd5b610418826103d5565b9392505050565b60008060408385031215610431578081fd5b61043a836103d5565b9150610448602084016103d5565b90509250929050565b602081016002831061048c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b6000602080835283518082850152825b818110156104be578581018301518582016040015282016104a2565b818111156104cf5783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b600181811c9082168061051757607f821691505b60208210811415610551577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b5091905056fea2646970667358221220c2d6d7cd9b5de2e45eb804e74eeb0eaa673104b53e066334b75d87f72b6c234164736f6c63430008040033";
